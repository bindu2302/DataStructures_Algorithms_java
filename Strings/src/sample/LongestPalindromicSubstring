package sample;

import java.util.Scanner;

public class LongestPalindromicSubstring {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		String str = scanner.nextLine().trim();
		
		String longestP = findLongestPalindromic(str);
		System.out.println(longestP);
	}
	
	public static String findLongestPalindromic(String s) {
		if(s.length() == 0) return "";
		String longest = "";
		
		for(int i=0; i<s.length(); i++) {
			String oddPalindrome = expandAroundCenter(s,i,i);
			
			if(oddPalindrome.length() > longest.length()) {
				longest = oddPalindrome;
			}
			
			String evenPalindrome = expandAroundCenter(s,i,i+1);
			if(evenPalindrome.length() > longest.length()) {
				longest = evenPalindrome;
			}
		}
		return longest;
	}
	
	public static String expandAroundCenter(String s, int left, int right) {
		while(left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
			left--;
			right++;
		}
		return s.substring(left+1,right);
	}
}

//babad
//bab

//cbbd
//bb


